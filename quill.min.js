/*
 * Quill.js - A modern rich text editor built for compatibility and extensibility.
 * Version: 1.3.6
 * 
 * This is a simplified local version for basic rich text editing.
 * For full functionality, use the complete Quill.js library.
 */

// Simple rich text editor implementation
class SimpleEditor {
	constructor(container, options = {}) {
		this.container = typeof container === 'string' ? document.querySelector(container) : container;
		this.options = options;
		this.content = '';
		this.init();
	}

	init() {
		// Create toolbar
		const toolbar = document.createElement('div');
		toolbar.className = 'editor-toolbar';
		toolbar.innerHTML = `
			<button type="button" data-command="bold" title="Bold"><b>B</b></button>
			<button type="button" data-command="italic" title="Italic"><i>I</i></button>
			<button type="button" data-command="underline" title="Underline"><u>U</u></button>
			<button type="button" data-command="insertOrderedList" title="Numbered List">1.</button>
			<button type="button" data-command="insertUnorderedList" title="Bullet List">â€¢</button>
			<button type="button" data-command="formatBlock" data-value="h1" title="Heading 1">H1</button>
			<button type="button" data-command="formatBlock" data-value="h2" title="Heading 2">H2</button>
			<button type="button" data-command="formatBlock" data-value="p" title="Paragraph">P</button>
		`;

		// Create editor
		const editor = document.createElement('div');
		editor.className = 'editor-content';
		editor.contentEditable = true;
		editor.innerHTML = this.options.placeholder || '';

		// Wrap in container
		const wrapper = document.createElement('div');
		wrapper.className = 'simple-editor';
		wrapper.appendChild(toolbar);
		wrapper.appendChild(editor);

		this.container.appendChild(wrapper);

		// Store references
		this.toolbar = toolbar;
		this.editor = editor;

		// Add event listeners
		this.addEventListeners();
	}

	addEventListeners() {
		// Toolbar buttons
		this.toolbar.addEventListener('click', (e) => {
			if (e.target.tagName === 'BUTTON') {
				e.preventDefault();
				const command = e.target.dataset.command;
				const value = e.target.dataset.value;
				
				if (command === 'formatBlock') {
					document.execCommand(command, false, value);
				} else {
					document.execCommand(command, false, null);
				}
				
				this.editor.focus();
			}
		});

		// Content changes
		this.editor.addEventListener('input', () => {
			this.content = this.editor.innerHTML;
			if (this.options.onChange) {
				this.options.onChange(this.content);
			}
		});
	}

	getHTML() {
		return this.editor.innerHTML;
	}

	setHTML(html) {
		this.editor.innerHTML = html;
		this.content = html;
	}

	getText() {
		return this.editor.textContent;
	}
}

// Global Quill-like interface
window.Quill = SimpleEditor;